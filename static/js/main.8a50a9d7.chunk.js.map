{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpenses/ExpenseForm.js","components/NewExpenses/NewExpenses.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","year","onChange","e","onSetYear","target","ExpenseDate","date","getFullYear","month","toLocaleString","day","ExpenseItem","title","amount","ExpensesList","filteredExpenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPoints","dataPointsValues","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","getMonth","Expenses","useState","setYear","expenses","filter","toString","sort","a","b","getTime","ExpenseFrom","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","name","placeholder","required","min","step","onClick","onCancle","NewExpenses","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a50a9d7.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n// import { useState } from \"react/cjs/react.development\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropDownYearHandler = (e) => {\r\n    props.onSetYear(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.year} onChange={dropDownYearHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const year = props.date.getFullYear();\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = ({ filteredExpenses }) => {\r\n  if (filteredExpenses.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {filteredExpenses.map((expense) => (\r\n        <ExpenseItem\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n          key={expense.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0 ) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100 ) + \"%\" // Math.round四捨五入取整數值\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n      </div>\r\n      <label className=\"chart-bar__label\">{props.label}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = ({ dataPoints }) => {\r\n  const dataPointsValues = dataPoints.map(dataPoint => dataPoint.value)\r\n  const totalMaximum = Math.max(...dataPointsValues); //如果arquement是string,Math.max方法會自動幫我們轉成數字\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          label={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.filteredExpenses) {\r\n    let expenseMonth = expense.date.getMonth(); //一月從index 0 開始!!\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints}/>;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n  const [year, setYear] = useState(\"2021\");\r\n\r\n  const filteredExpenses = props.expenses.filter(\r\n    (expense) => expense.date.getFullYear().toString() === year  //花費對應年份\r\n  ).sort((a,b) => b.date.getTime() - a.date.getTime());  //花費日期由上到下排列\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter onSetYear={setYear} year={year} />\r\n      <ExpensesChart filteredExpenses={filteredExpenses} />\r\n      <ExpensesList filteredExpenses={filteredExpenses} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n\r\n/* 第二種寫法 &&運算符 如果第一個回傳true,則回傳第二個 */\r\n/* {filteredExpense.length === 0 && <p>no items</p>}\r\n      {filteredExpense.length > 0 &&\r\n        filteredExpense.map((expense) => (\r\n          <ExpenseItem\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n            key={expense.id}\r\n          />\r\n        ))} */\r\n/* 第一種寫法 三元運算符\r\n      {filteredExpense.length ? (\r\n        filteredExpense.map((expense) => (\r\n          <ExpenseItem\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n            key={expense.id}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p>no items</p>\r\n      )} */\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseFrom = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (e) => {\r\n    setEnteredTitle(e.target.value);\r\n  };\r\n  const amountChangeHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n  };\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault(); /* 防止網頁 reload */\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount, //在字串數字前加上+號可以轉成數字\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"項目名稱\"\r\n            required\r\n            onChange={titleChangeHandler}\r\n            value={enteredTitle}\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          {/* min為輸入金額最小值 step可限制金額倍數 例如step='10'表示只能輸入-10 0 10 20... */}\r\n          <input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            placeholder=\"金額\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            required\r\n            onChange={amountChangeHandler}\r\n            value={enteredAmount}\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019/01/01\"\r\n            max=\"2022/12/31\"\r\n            required\r\n            onChange={dateChangeHandler}\r\n            value={enteredDate}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancle}>\r\n          Cancle\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseFrom;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpenses.css\";\r\nimport ExpenseFrom from \"./ExpenseForm\";\r\n\r\nconst NewExpenses = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (<button type=\"button\" onClick={startEditingHandler}>Add New Expense</button>)}\r\n      {isEditing && <ExpenseFrom onSaveExpenseData={saveExpenseDataHandler} onCancle={stopEditingHandler}/>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpenses;\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpenses from \"./components/NewExpenses/NewExpenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"衣服\",\n    amount: 1500,\n    date: new Date(2020, 7, 18),  //月數從index 0開始計算,7為八月\n  },\n  { id: \"e2\", title: \"PS4\", amount: 8000, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"鞋子\",\n    amount: 2000,\n    date: new Date(2021, 8, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"水電費\",\n    amount: 1000,\n    date: new Date(2021, 8, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => [expense, ...prevExpenses]);\n  };\n\n  return (\n    <div>\n      <NewExpenses onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}